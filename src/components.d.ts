/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface RootComponent {
    }
    interface SinchButton {
        "text": string;
        "type": string;
    }
    interface SinchModal {
        "actions": any;
        "open": boolean;
        "titleText": string;
    }
}
declare global {
    interface HTMLRootComponentElement extends Components.RootComponent, HTMLStencilElement {
    }
    var HTMLRootComponentElement: {
        prototype: HTMLRootComponentElement;
        new (): HTMLRootComponentElement;
    };
    interface HTMLSinchButtonElement extends Components.SinchButton, HTMLStencilElement {
    }
    var HTMLSinchButtonElement: {
        prototype: HTMLSinchButtonElement;
        new (): HTMLSinchButtonElement;
    };
    interface HTMLSinchModalElement extends Components.SinchModal, HTMLStencilElement {
    }
    var HTMLSinchModalElement: {
        prototype: HTMLSinchModalElement;
        new (): HTMLSinchModalElement;
    };
    interface HTMLElementTagNameMap {
        "root-component": HTMLRootComponentElement;
        "sinch-button": HTMLSinchButtonElement;
        "sinch-modal": HTMLSinchModalElement;
    }
}
declare namespace LocalJSX {
    interface RootComponent {
    }
    interface SinchButton {
        "onButtonClick"?: (event: CustomEvent<any>) => void;
        "text"?: string;
        "type"?: string;
    }
    interface SinchModal {
        "actions"?: any;
        "onCloseAction"?: (event: CustomEvent<any>) => void;
        "open"?: boolean;
        "titleText"?: string;
    }
    interface IntrinsicElements {
        "root-component": RootComponent;
        "sinch-button": SinchButton;
        "sinch-modal": SinchModal;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "root-component": LocalJSX.RootComponent & JSXBase.HTMLAttributes<HTMLRootComponentElement>;
            "sinch-button": LocalJSX.SinchButton & JSXBase.HTMLAttributes<HTMLSinchButtonElement>;
            "sinch-modal": LocalJSX.SinchModal & JSXBase.HTMLAttributes<HTMLSinchModalElement>;
        }
    }
}
